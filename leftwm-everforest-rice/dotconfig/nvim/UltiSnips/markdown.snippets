global !p
def math():
    synlist = vim.eval("""map(synstack(line('.'), col('.')), 'synIDattr(v:val, "name")')""")

    for syngroup in synlist:
        if 'Math' in syngroup:
            return True

    return False
endglobal  

snippet yfm "YAML Front Matter" bA
---
title: $1
author: $2
geometry: margin=0.5in
papersize: a4
fontsize: 12pt
...
$0
endsnippet

snippet dm "Math Block" wA
$$$1$$
$0
endsnippet

snippet mk "Inline Math" wA
$$1$$0
endsnippet

snippet today "Date"
`date +%F`
endsnippet

context "math()"
snippet mk "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

# context "math()"
# snippet '([A-Za-z])(\d)' "auto subscript" wrA
# `!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
# endsnippet

# context "math()"
# snippet '([A-Za-z])_(\d\d)' "auto subscript2" wrA
# `!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
# endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet compl "complement" iA
^{c}
endsnippet

context "math()"
snippet td "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet

context "math()"
priority 1000
snippet '^.*\)/' "() Fraction" wrA
`!p
stripped = match.string[:-1]
depth = 0
i = len(stripped) - 1
while True:
	if stripped[i] == ')': depth += 1
	if stripped[i] == '(': depth -= 1
	if depth == 0: break;
	i -= 1
snip.rv = stripped[0:i] + "\\frac{" + stripped[i+1:-1] + "}"
`{$1}$0
endsnippet

context "math()"
priority 10
snippet "bar" "bar" riA
\overline{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
priority 10
snippet "hat" "hat" riA
\hat{$1}$0
endsnippet

context "math()"
priority 100
snippet "([a-zA-Z])hat" "hat" riA
\hat{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet "(\\?\w+)(,\.|\.,)" "Vector postfix" riA
\vec{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet ooo "Infinity" wA
\infty
endsnippet

context "math()"
snippet pm "Plus or Minus" iA
\pm
endsnippet

context "math()"
snippet sq "Square Root" wA
\sqrt{$1}$0
endsnippet

context "math()"
snippet * "Times" iA
\cdot
endsnippet

context "math()"
snippet -> "Right Arrow" iA
\rightarrow
endsnippet

context "math()"
snippet and "Logical and" wA
\land
endsnippet

context "math()"
snippet or "Logical or" wA
\lor
endsnippet

context "math()"
snippet not "Logical not" wA
\lnot
endsnippet

context "math()"
snippet tx "Text" iA
\text{$1}$0
endsnippet

context "math()"
snippet tt "Typewriter Text" iA
\texttt{$1}$0
endsnippet

context "math()"
snippet impl "Implies" iA
\implies
endsnippet

context "math()"
snippet beg "Begin/End Block" iA
\begin{$1}$2
$3
\end{$1}$0
endsnippet

context "math()"
snippet all "For All" wA
\forall
endsnippet

context "math()"
snippet exi "There Exists" iA
\exists
endsnippet

context "math()"
snippet cap "Intersection" iA
\cap
endsnippet

context "math()"
snippet cup "Union" iA
\cup
endsnippet

context "math()"
snippet in "Element Of" wA
\in
endsnippet

context "math()"
snippet nin "Not Element Of" iA
\notin
endsnippet

context "math()"
snippet bb "Double-Struck Letters" iA
\mathbb{$1}$0
endsnippet

context "math()"
snippet {} "Bracket Pair" w
\\\{ $1 \\\}$0
endsnippet

context "math()"
snippet tf "Therefore" iA
\therefore
endsnippet

context "math()"
snippet ps "Powerset" iA
\mathcal{P}
endsnippet

context "math()"
snippet ne "Not Equals" wA
\ne
endsnippet

context "math()"
snippet ceil "Ceiling Area" iA
\left \lceil $1 \right \rceil$0
endsnippet

context "math()"
snippet () "Parentheses Pair" w
\left( $1 \right)$0
endsnippet

context "math()"
snippet fl "Floor Pair" w
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet ~~ "Approximately" iA
\approx
endsnippet

context "math()"
snippet ncr "Choose" iA
\{$1 \\choose $2\}$0
endsnippet

context "math()"
snippet sum "Summation Notation" iA
\sum_{${3:${1:n} = ${2:1}}}${5:^{${4:\infty}}}$0
endsnippet

context "math()"
snippet st "Star" iA
*
endsnippet

context "math()"
snippet sl "Slash" iA
/
endsnippet

snippet pe "Python Eval"
`!p snip.rv=eval(snip.v.text)`
endsnippet

context "math()"
snippet hl "Horizontal Line" wA
\hline
endsnippet

context "math()"
snippet ... "Dots" wA
\dots
endsnippet
